<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xmind.dao.TimeMapper">
  <resultMap id="BaseResultMap" type="com.xmind.entity.Time">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="imgid" jdbcType="VARCHAR" property="imgid" />
    <result column="videoid" jdbcType="VARCHAR" property="videoid" />
    <result column="bak1" jdbcType="VARCHAR" property="bak1" />
    <result column="bak2" jdbcType="VARCHAR" property="bak2" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xmind.entity.Time">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, time, imgid, videoid, bak1, bak2
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_timeline
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="findTotal" resultType="java.lang.Integer">
    select count(*) as count from t_timeline
  </select>
  <select id="findList" resultMap="BaseResultMap" parameterType="java.lang.Integer"> 
  	select * from t_timeline order by time desc limit #{0}, #{1} 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_timeline
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xmind.entity.Time">
    insert into t_timeline (id, title, time, 
      imgid, videoid, bak1, 
      bak2, content)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{imgid,jdbcType=VARCHAR}, #{videoid,jdbcType=VARCHAR}, #{bak1,jdbcType=VARCHAR}, 
      #{bak2,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xmind.entity.Time">
    insert into t_timeline
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="imgid != null">
        imgid,
      </if>
      <if test="videoid != null">
        videoid,
      </if>
      <if test="bak1 != null">
        bak1,
      </if>
      <if test="bak2 != null">
        bak2,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="imgid != null">
        #{imgid,jdbcType=VARCHAR},
      </if>
      <if test="videoid != null">
        #{videoid,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null">
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmind.entity.Time">
    update t_timeline
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="imgid != null">
        imgid = #{imgid,jdbcType=VARCHAR},
      </if>
      <if test="videoid != null">
        videoid = #{videoid,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null">
        bak1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        bak2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xmind.entity.Time">
    update t_timeline
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      imgid = #{imgid,jdbcType=VARCHAR},
      videoid = #{videoid,jdbcType=VARCHAR},
      bak1 = #{bak1,jdbcType=VARCHAR},
      bak2 = #{bak2,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmind.entity.Time">
    update t_timeline
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      imgid = #{imgid,jdbcType=VARCHAR},
      videoid = #{videoid,jdbcType=VARCHAR},
      bak1 = #{bak1,jdbcType=VARCHAR},
      bak2 = #{bak2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>